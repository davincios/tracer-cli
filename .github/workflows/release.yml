name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v[0-9]+.*"

jobs:
  build-test-and-release:
    name: Build, Test, and Release on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4.1.4
      - name: Setup Rust toolchain
        run: rustup toolchain install stable --profile minimal
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Build
        run: cargo build --release --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Check Formatting
        run: cargo fmt -- --check
      - name: Lint with Clippy
        run: cargo clippy -- -D warnings
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{ matrix.os }}
          path: target/release/tracer

  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Release
        uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: [create-release, build-test-and-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifact for Ubuntu
        uses: actions/download-artifact@v3
        with:
          name: binary-ubuntu-latest
      - name: Download build artifact for macOS
        uses: actions/download-artifact@v3
        with:
          name: binary-macos-latest
      - name: Upload Rust binaries for Ubuntu
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: tracer
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Rust binaries for macOS
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: tracer
          token: ${{ secrets.GITHUB_TOKEN }}
